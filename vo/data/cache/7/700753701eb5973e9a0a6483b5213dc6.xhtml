


<h2><a name="running_cherrypy_behind_apache2_with_mod_python" id="running_cherrypy_behind_apache2_with_mod_python">Running CherryPy behind Apache2 with mod_python</a></h2>
<div class="level2">

<p>

Here are some brief notes on how I got CherryPy working nicely with Apache, instead of the default built-in webserver. Remember to check the CherryPy and Apache log files for error tracebacks! mod_python has the annoying habit of reporting `unrecoverable&#039; server errors, but the tracebacks should still be available in the logs.
</p>

<p>
Version information:
</p>

<p>
CherryPy 3.1.2, Apache 2.2.13, mod_python 3.3.1
</p>

<p>
<a href="http://www.electricmonk.nl/Writings/HomePage?action=download&amp;upname=cherrypy_modpython.html" class="urlextern" title="http://www.electricmonk.nl/Writings/HomePage?action=download&amp;upname=cherrypy_modpython.html"  rel="nofollow">Some excellent notes</a> (which I found after the fact).
</p>

</div>
<!-- SECTION "Running CherryPy behind Apache2 with mod_python" [1-612] -->
<h3><a name="configuring_apache" id="configuring_apache">Configuring Apache</a></h3>
<div class="level3">

<p>

I chose to host CherryPy from port 8080, to keep the default ports free. Once mod_python is compiled and placed in the appropriate directory, put the code below in a separate conf file in <code>/etc/apache2/other/</code>:
</p>
<dl class="code">
<dt><a href="/~murphysj/vo/doku.php?do=export_code&amp;id=cherrypy:mod_python&amp;codeblock=0" title="Download Snippet" class="mediafile mf_conf">cherrypy.conf</a></dt>
<dd><pre class="code apache"><span class="kw1">Listen</span> 8080
<span class="kw1">LoadModule</span> python_module libexec/apache2/mod_python.so
&nbsp;
&lt;<span class="kw3">VirtualHost</span> *:8080&gt;
        <span class="kw1">DocumentRoot</span> <span class="st0">&quot;/Users/Azrael/VO/conesearch&quot;</span>
        &lt;<span class="kw3">Location</span> /&gt;
                <span class="kw1">Allow</span> From <span class="kw2">All</span>
                PythonPath <span class="st0">&quot;sys.path+['/Users/Azrael/VO/conesearch']&quot;</span>
                <span class="kw1">SetHandler</span> python-program
                PythonHandler cherrypy._cpmodpy::handler
                PythonOption cherrypy.setup initialise::serverless
                PythonDebug <span class="kw2">On</span>
        &lt;/<span class="kw3">Location</span>&gt;
&lt;/<span class="kw3">VirtualHost</span>&gt;</pre>
</dd></dl>

<p>
Things to be aware of: 
</p>

<p>
The application&#039;s working directory is &#039;/&#039;! This means that any referencing to files such as configurations or databases need to be absolute instead of relative. You always need to specify the entire path to the file.
</p>

<p>
Because Apache and CherryPy cache various bits and pieces, you must restart Apache to see any changes in your python code: <code>apachectl -k graceful</code>.
</p>

<p>
The &#039;launcher&#039; python script is in <code>/Users/Azrael/VO/consearch/initialise.py</code>. The <code>serverless()</code> method starts the CherryPy <em>without</em> the built-in webserver.
</p>

<p>
Take care with the architecture of compiled python modules. For example, the default Apache server on OSX 10.5 is compiled as 64-bit. This means all extension modules (like <code>psycopg2</code>, as I found out) need to be compiled for <code>x86_64</code>. The default for Python&#039;s <code>distutils</code> is for 32-bit, i.e. <code>i386</code>.

</p>

</div>
<!-- SECTION "Configuring Apache" [613-2253] -->
<h3><a name="configuring_cherrypy_-_initialisepy" id="configuring_cherrypy_-_initialisepy">Configuring CherryPy - initialise.py</a></h3>
<div class="level3">
<dl class="code">
<dt><a href="/~murphysj/vo/doku.php?do=export_code&amp;id=cherrypy:mod_python&amp;codeblock=1" title="Download Snippet" class="mediafile mf_py">initialise.py</a></dt>
<dd><pre class="code python"><span class="kw1">import</span> cherrypy
<span class="kw1">import</span> conesearch
&nbsp;
__doc__ = <span class="st0">&quot;&quot;&quot;
Master configuration file for setting up one or more CherryPy
Cone Search services (apps). Each app must be mounted at a 
separate location.
&quot;&quot;&quot;</span>
&nbsp;
<span class="kw1">def</span> start<span class="br0">&#40;</span><span class="br0">&#41;</span>:
    <span class="co1"># Site-wide config</span>
    cherrypy.<span class="me1">config</span>.<span class="me1">update</span><span class="br0">&#40;</span>conesearch.<span class="me1">current_dir</span>+<span class="st0">'/site.config'</span><span class="br0">&#41;</span>
    <span class="co1"># Mount the static files so they are accessible by all</span>
    config = <span class="br0">&#123;</span><span class="st0">'/static'</span>:<span class="br0">&#123;</span><span class="st0">'tools.staticdir.on'</span>: <span class="kw2">True</span>,<span class="st0">'tools.staticdir.dir'</span>: cones
earch.<span class="me1">current_dir</span>+<span class="st0">'/static'</span>,<span class="br0">&#125;</span><span class="br0">&#125;</span>
    cherrypy.<span class="me1">tree</span>.<span class="me1">mount</span><span class="br0">&#40;</span>conesearch.<span class="me1">Common</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, <span class="st0">'/common'</span>, config<span class="br0">&#41;</span>
    <span class="co1"># Mount each app and load its own config</span>
    cherrypy.<span class="me1">tree</span>.<span class="me1">mount</span><span class="br0">&#40;</span>conesearch.<span class="me1">ConeSearch</span><span class="br0">&#40;</span><span class="br0">&#41;</span>, <span class="st0">&quot;/ucac3&quot;</span>, conesearch.<span class="me1">current_di</span>
r+<span class="st0">'/ucac3.config'</span><span class="br0">&#41;</span>
    cherrypy.<span class="me1">engine</span>.<span class="me1">start</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">def</span> serverless<span class="br0">&#40;</span><span class="br0">&#41;</span>:
    <span class="co1"># USE APACHE WITH MOD_PYTHON ON mothra.anu.edu.au:8088</span>
    cherrypy.<span class="me1">server</span>.<span class="me1">unsubscribe</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
    cherrypy.<span class="me1">engine</span>.<span class="me1">timeout_monitor</span>.<span class="me1">unsubscribe</span><span class="br0">&#40;</span><span class="br0">&#41;</span> 
    cherrypy.<span class="me1">engine</span>.<span class="me1">autoreload</span>.<span class="me1">unsubscribe</span><span class="br0">&#40;</span><span class="br0">&#41;</span> 
    start<span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">def</span> serve<span class="br0">&#40;</span><span class="br0">&#41;</span>:
    <span class="co1"># USE CHERRYPY BUILT-IN SERVER ON PORT 8088</span>
    cherrypy.<span class="me1">engine</span>.<span class="me1">autoreload</span>.<span class="me1">subscribe</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
    cherrypy.<span class="me1">config</span>.<span class="me1">update</span><span class="br0">&#40;</span><span class="br0">&#123;</span><span class="st0">'server.socket_port'</span>:8088<span class="br0">&#125;</span><span class="br0">&#41;</span>
    start<span class="br0">&#40;</span><span class="br0">&#41;</span>
    cherrypy.<span class="me1">engine</span>.<span class="me1">block</span><span class="br0">&#40;</span><span class="br0">&#41;</span>
&nbsp;
<span class="kw1">if</span> __name__ == <span class="st0">&quot;__main__&quot;</span>:
    serve<span class="br0">&#40;</span><span class="br0">&#41;</span></pre>
</dd></dl>

</div>
<!-- SECTION "Configuring CherryPy - initialise.py" [2254-3504] -->
<h3><a name="testing_using_the_built-in_webserver" id="testing_using_the_built-in_webserver">Testing using the built-in webserver</a></h3>
<div class="level3">

<p>

To run using CherryPy&#039;s webserver: <code>python initialise.py</code>
</p>

<p>
To avoid conflicts with the Apache-hosted version, the <code>serve()</code> method mounts the CherryPy webserver at port 8088. Turning on auto-reload will restart the CherryPy webserver automatically after each source code change. 

</p>

</div>
<!-- SECTION "Testing using the built-in webserver" [3505-] -->